#!/bin/bash
# run_monster_background.sh - Script para executar pipeline em background na m√°quina monster

#set -euo pipefail

# Configura√ß√µes
CONFIG="config_human_30x_monster.yaml"
LOG_FILE="pipeline_monster_$(date +%Y%m%d_%H%M%S).log"
PID_FILE="pipeline_monster.pid"

echo "üöÄ Preparando execu√ß√£o em background na m√°quina monster (128 cores + 256GB RAM)"
echo "üìã Config: $CONFIG"
echo "üìù Log: $LOG_FILE"

# Verifica se j√° est√° rodando
if [ -f "$PID_FILE" ]; then
    OLD_PID=$(cat "$PID_FILE")
    if kill -0 "$OLD_PID" 2>/dev/null; then
        echo "‚ùå Pipeline j√° est√° rodando (PID: $OLD_PID)"
        echo "   Para parar: kill $OLD_PID"
        echo "   Para monitorar: tail -f $LOG_FILE"
        exit 1
    else
        echo "üßπ Removendo PID file √≥rf√£o"
        rm -f "$PID_FILE"
    fi
fi

# Verifica se config existe
if [ ! -f "$CONFIG" ]; then
    echo "‚ùå Arquivo de configura√ß√£o n√£o encontrado: $CONFIG"
    exit 1
fi

# Executa em background com nohup
echo "üöÄ Iniciando pipeline em background..."
echo "üìù Logs ser√£o salvos em: $LOG_FILE"
echo "üîç Para monitorar: tail -f $LOG_FILE"
echo "‚èπÔ∏è  Para parar: kill \$(cat $PID_FILE)"

# Executa pipeline com largura de log otimizada
echo "üîß Configurando logs com largura de 180 caracteres..."
nohup ./genomes_analyzer.py --config "$CONFIG" > "$LOG_FILE" 2>&1 &
PIPELINE_PID=$!

# Salva PID
echo "$PIPELINE_PID" > "$PID_FILE"

echo "‚úÖ Pipeline iniciado!"
echo "üìä PID: $PIPELINE_PID"
echo "üìù Log: $LOG_FILE"
echo ""
echo "üìã Comandos √∫teis:"
echo "   Monitorar:     tail -f $LOG_FILE"
echo "   Monitorar live: watch 'tail -20 $LOG_FILE'"
echo "   Status:        ps -p $PIPELINE_PID"
echo "   Parar:         kill $PIPELINE_PID"
echo "   Recursos:      htop -p $PIPELINE_PID"
echo ""
echo "üéØ Configura√ß√£o monster 256GB ativa:"
echo "   ‚Ä¢ 96 threads alinhamento (3/4 dos cores)"
echo "   ‚Ä¢ 64 shards paralelos BCFtools"
echo "   ‚Ä¢ 96 forks VEP (buffer 100K variantes)"
echo "   ‚Ä¢ 4GB RAM por thread samtools"
echo "   ‚Ä¢ 128GB Java heap para GATK"
echo "   ‚Ä¢ RAM disk /dev/shm para tempor√°rios"
echo "   ‚Ä¢ Dados 30√ó completos (sem downsample)"
echo ""

# Mostra in√≠cio do log
echo "üìñ Primeiras linhas do log:"
sleep 2
head -20 "$LOG_FILE" || echo "Log ainda n√£o iniciado..."
