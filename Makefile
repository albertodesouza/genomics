# Makefile para conta_diferencas_genes
CXX = g++
CXXFLAGS = -std=c++17 -O3 -march=native -mtune=native -flto -DNDEBUG
CXXFLAGS += -Wall -Wextra -pedantic
CXXFLAGS += -funroll-loops -ffast-math -finline-functions
CXXFLAGS += -fopenmp
TARGET = conta_diferencas_genes
SOURCE = conta_diferencas_genes.cpp

# Compila√ß√£o otimizada para m√°xima performance
$(TARGET): $(SOURCE)
	@echo "üî® Compilando vers√£o ultra-otimizada..."
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(SOURCE)
	@echo "‚úÖ Compila√ß√£o conclu√≠da! Execut√°vel: $(TARGET)"

# Vers√£o de debug
debug: CXXFLAGS = -std=c++17 -g -O0 -Wall -Wextra -pedantic -DDEBUG -fopenmp
debug: $(SOURCE)
	@echo "üêõ Compilando vers√£o debug..."
	$(CXX) $(CXXFLAGS) -o $(TARGET)_debug $(SOURCE)
	@echo "‚úÖ Vers√£o debug compilada! Execut√°vel: $(TARGET)_debug"

# Limpeza
clean:
	@echo "üßπ Limpando arquivos compilados..."
	rm -f $(TARGET) $(TARGET)_debug
	@echo "‚úÖ Limpeza conclu√≠da!"

# Teste r√°pido
test: $(TARGET)
	@echo "üß™ Executando teste..."
	./$(TARGET)

# Informa√ß√µes de compila√ß√£o
info:
	@echo "üìã Informa√ß√µes de compila√ß√£o:"
	@echo "   Compilador: $(CXX)"
	@echo "   Flags de otimiza√ß√£o: $(CXXFLAGS)"
	@echo "   Target: $(TARGET)"
	@echo "   Source: $(SOURCE)"

# Instalar depend√™ncias (se necess√°rio)
deps:
	@echo "üì¶ Verificando depend√™ncias..."
	@which g++ > /dev/null || (echo "‚ùå g++ n√£o encontrado! Instale com: sudo apt install build-essential" && exit 1)
	@echo "‚úÖ Todas as depend√™ncias est√£o OK!"

.PHONY: clean debug test info deps

# Explica√ß√£o das otimiza√ß√µes:
# -O3: M√°xima otimiza√ß√£o
# -march=native: Otimizar para a CPU atual
# -mtune=native: Ajustar para a CPU atual  
# -flto: Link Time Optimization
# -DNDEBUG: Desabilitar asserts
# -funroll-loops: Desenrolar loops
# -ffast-math: Matem√°tica r√°pida
# -finline-functions: Inlining agressivo
# -fopenmp: Habilitar OpenMP para paraleliza√ß√£o
